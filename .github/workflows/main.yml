# This is a basic workflow to help you get started with Actions

name: main workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]
    
  pull_request:
    branches:
      - '**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    strategy:
      matrix:
        python-versions: ["3.11"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}
          lfs: true
        
      # pyright needs node
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache Python dependencies
        uses: actions/cache@v3
        id: cache-env
        with:
          # cache location for venv and nltk
          path: |
            ~/nltk_data
            ./venv
            .git/hooks
          key: ${{ runner.os }}-cache-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/Makefile') }}
          
      - name: Install dependencies
        if: steps.cache-env.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          source ./venv/bin/activate
          make env
          echo PATH=$PATH >> $GITHUB_ENV
          echo "./venv/bin" >> $GITHUB_PATH
      - name: Restore venv
        if: steps.cache-env.outputs.cache-hit == 'true'
        run: |
          source ./venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV
          echo "./venv/bin" >> $GITHUB_PATH
          

      # Run all the pre-commit hooks on all files
      # Skip pyright because we already ran it
      - name: Run pre-commit hooks
        run: |
          make hooks
          SKIP=no-commit-to-branch pre-commit run --all-files

      - name: test with pytest
        run:
          pytest tests

